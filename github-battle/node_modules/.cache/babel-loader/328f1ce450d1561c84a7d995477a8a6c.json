{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/github-battle/github-battle/src/components/Card.js\";\nimport React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ThemeContext from '../contexts/theme';\n\nfunction Card({\n  header,\n  subheader,\n  avatar,\n  href,\n  name,\n  children\n}) {\n  const theme = useContext(ThemeContext);\n  return React.createElement(\"div\", {\n    className: \"card bg-\".concat(theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"header-lg center-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, header), React.createElement(\"img\", {\n    className: \"avatar\",\n    src: avatar,\n    alt: \"Avatar for \".concat(name),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), subheader && React.createElement(\"h4\", {\n    className: \"center-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, subheader), React.createElement(\"h2\", {\n    className: \"center-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    className: \"link\",\n    href: href,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, name)), children, ' ');\n}\n\nCard.propTypes = {\n  header: PropTypes.string.isRequired,\n  subheader: PropTypes.string,\n  avatar: PropTypes.string.isRequired,\n  href: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired\n};\nexport default Card;","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/github-battle/github-battle/src/components/Card.js"],"names":["React","useContext","PropTypes","ThemeContext","Card","header","subheader","avatar","href","name","children","theme","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,SAASC,IAAT,CAAc;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,SAAV;AAAqBC,EAAAA,MAArB;AAA6BC,EAAAA,IAA7B;AAAmCC,EAAAA,IAAnC;AAAyCC,EAAAA;AAAzC,CAAd,EAAmE;AACjE,QAAMC,KAAK,GAAGV,UAAU,CAACE,YAAD,CAAxB;AAEA,SACE;AAAK,IAAA,SAAS,oBAAaQ,KAAb,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCN,MAAvC,CADF,EAEE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAwB,IAAA,GAAG,EAAEE,MAA7B;AAAqC,IAAA,GAAG,uBAAgBE,IAAhB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGGH,SAAS,IAAI;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BA,SAA7B,CAHhB,EAIE;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,IAAA,IAAI,EAAEE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IADH,CADF,CAJF,EASGC,QATH,EASa,GATb,CADF;AAcD;;AAEDN,IAAI,CAACQ,SAAL,GAAiB;AACfP,EAAAA,MAAM,EAAEH,SAAS,CAACW,MAAV,CAAiBC,UADV;AAEfR,EAAAA,SAAS,EAAEJ,SAAS,CAACW,MAFN;AAGfN,EAAAA,MAAM,EAAEL,SAAS,CAACW,MAAV,CAAiBC,UAHV;AAIfN,EAAAA,IAAI,EAAEN,SAAS,CAACW,MAAV,CAAiBC,UAJR;AAKfL,EAAAA,IAAI,EAAEP,SAAS,CAACW,MAAV,CAAiBC;AALR,CAAjB;AAQA,eAAeV,IAAf","sourcesContent":["import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport ThemeContext from '../contexts/theme';\n\nfunction Card({ header, subheader, avatar, href, name, children }) {\n  const theme = useContext(ThemeContext);\n\n  return (\n    <div className={`card bg-${theme}`}>\n      <h4 className='header-lg center-text'>{header}</h4>\n      <img className='avatar' src={avatar} alt={`Avatar for ${name}`} />\n      {subheader && <h4 className='center-text'>{subheader}</h4>}\n      <h2 className='center-text'>\n        <a className='link' href={href}>\n          {name}\n        </a>\n      </h2>\n      {children}{' '}\n      {/*render children -- whatever is between the opening and closing card tags*/}\n    </div>\n  );\n}\n\nCard.propTypes = {\n  header: PropTypes.string.isRequired,\n  subheader: PropTypes.string,\n  avatar: PropTypes.string.isRequired,\n  href: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}