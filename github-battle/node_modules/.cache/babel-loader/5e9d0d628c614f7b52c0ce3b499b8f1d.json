{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/github-battle/github-battle/src/components/Nav.js\";\nimport React from 'react';\nimport { ThemeConsumer } from '../contexts/theme';\nimport { NavLink } from 'react-router-dom'; //the style applied to the link when it's active (a feature of NavLink vs. Nav)\n\nconst activeStyle = {\n  color: 'rgb(187, 46, 31)'\n};\nexport default function Nav({\n  toggleTheme\n}) {\n  // Hooks to consume the light/dark theme\n  const theme = useContext(ThemeContext);\n  return React.createElement(\"nav\", {\n    className: \"row space-between\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"row nav\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    exact: true,\n    to: \"/\",\n    activeStyle: activeStyle,\n    className: \"nav-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Popular\")), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/battle\",\n    activeStyle: activeStyle,\n    className: \"nav-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Battle\"))), React.createElement(\"button\", {\n    style: {\n      fontSize: 30\n    },\n    className: \"btn-clear\",\n    onClick: toggleTheme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, theme === 'light' ? 'ðŸ”¦' : 'ðŸ’¡'));\n}","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/github-battle/github-battle/src/components/Nav.js"],"names":["React","ThemeConsumer","NavLink","activeStyle","color","Nav","toggleTheme","theme","useContext","ThemeContext","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,OAAT,QAAwB,kBAAxB,C,CAEA;;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,KAAK,EAAE;AADW,CAApB;AAIA,eAAe,SAASC,GAAT,CAAa;AAAEC,EAAAA;AAAF,CAAb,EAA8B;AAC3C;AACA,QAAMC,KAAK,GAAGC,UAAU,CAACC,YAAD,CAAxB;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,MAAd;AAAe,IAAA,EAAE,EAAC,GAAlB;AAAsB,IAAA,WAAW,EAAEN,WAAnC;AAAgD,IAAA,SAAS,EAAC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,EAAE,EAAC,SAAZ;AAAsB,IAAA,WAAW,EAAEA,WAAnC;AAAgD,IAAA,SAAS,EAAC,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CANF,CADF,EAaE;AACE,IAAA,KAAK,EAAE;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KADT;AAEE,IAAA,SAAS,EAAC,WAFZ;AAGE,IAAA,OAAO,EAAEJ,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGC,KAAK,KAAK,OAAV,GAAoB,IAApB,GAA2B,IAL9B,CAbF,CADF;AAuBD","sourcesContent":["import React from 'react';\nimport { ThemeConsumer } from '../contexts/theme';\nimport { NavLink } from 'react-router-dom';\n\n//the style applied to the link when it's active (a feature of NavLink vs. Nav)\nconst activeStyle = {\n  color: 'rgb(187, 46, 31)',\n};\n\nexport default function Nav({ toggleTheme }) {\n  // Hooks to consume the light/dark theme\n  const theme = useContext(ThemeContext);\n\n  return (\n    <nav className='row space-between'>\n      <ul className='row nav'>\n        <li>\n          <NavLink exact to='/' activeStyle={activeStyle} className='nav-link'>\n            Popular\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to='/battle' activeStyle={activeStyle} className='nav-link'>\n            Battle\n          </NavLink>\n        </li>\n      </ul>\n      <button\n        style={{ fontSize: 30 }}\n        className='btn-clear'\n        onClick={toggleTheme}\n      >\n        {theme === 'light' ? 'ðŸ”¦' : 'ðŸ’¡'}\n      </button>\n    </nav>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}