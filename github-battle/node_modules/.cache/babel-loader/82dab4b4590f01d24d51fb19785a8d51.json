{"ast":null,"code":"import _slicedToArray from \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/github-battle/github-battle/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/github-battle/github-battle/src/components/Battle.js\";\nimport React, { useState } from 'react';\nimport { FaUserFriends, FaFighterJet, FaTrophy, FaTimesCircle } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport { ThemeConsumer } from '../contexts/theme';\nimport { Link } from 'react-router-dom';\n\nconst Instructions = () => {\n  return React.createElement(ThemeConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, theme => React.createElement(\"div\", {\n    className: \"instructions-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"center-text header-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Instructions\"), React.createElement(\"ol\", {\n    className: \"container-sm grid center-text battle-instructions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Enter two Github users\"), React.createElement(FaUserFriends, {\n    className: \"bg-\".concat(theme),\n    color: \"rgb(255, 191, 116\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Battle\"), React.createElement(FaFighterJet, {\n    className: \"bg-\".concat(theme),\n    color: \"#727272\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"See the winners\"), React.createElement(FaTrophy, {\n    className: \"bg-\".concat(theme),\n    color: \"rgb(255, 215, 0)\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })))));\n};\n\nconst PlayerInput = ({\n  onSubmit,\n  label\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    onSubmit(username);\n  };\n\n  const handleChange = event => {\n    setUsername(event.target.value);\n  };\n\n  return React.createElement(ThemeConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, theme => React.createElement(\"form\", {\n    className: \"column player\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    className: \"player-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, label), React.createElement(\"div\", {\n    className: \"row player-inputs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    className: \"input-\".concat(theme),\n    autoComplete: \"off\",\n    value: username //control the value in the component's state\n    ,\n    onChange: handleChange //when user inputs, handleChange updates state which then updates value\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn \".concat(theme === 'dark' ? 'light-btn' : 'dark-btn'),\n    type: \"submit\",\n    disabled: !username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nPlayerInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nconst PlayerPreview = ({\n  username,\n  onReset,\n  label\n}) => {\n  return React.createElement(ThemeConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, theme => React.createElement(\"div\", {\n    className: \"column player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"player-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, label), React.createElement(\"div\", {\n    className: \"row bg-\".concat(theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"player-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"avatar-sm\",\n    src: \"https://github.com/\".concat(username, \".png?size=200\"),\n    alt: \"Avatar for \".concat(username),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: \"https://github.com/\".concat(username),\n    className: \"link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, username)), React.createElement(\"button\", {\n    className: \"btn-clear flex-center\",\n    onClick: onReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(FaTimesCircle, {\n    color: \"rgb(194, 57, 42)\",\n    size: 26,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  })))));\n};\n\nPlayerPreview.propTypes = {\n  username: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nconst Battle = () => {\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        playerOne = _useState4[0],\n        setPlayerOne = _useState4[1];\n\n  const _useState5 = useState(null),\n        _useState6 = _slicedToArray(_useState5, 2),\n        playerTwo = _useState6[0],\n        setPlayerTwo = _useState6[1];\n\n  const _useState7 = useState(),\n        _useState8 = _slicedToArray(_useState7, 2),\n        battle = _useState8[0],\n        setBattle = _useState8[1];\n\n  const handleSubmit = (id, player) => {\n    id === 'playerOne' ? setPlayerOne(player) : setPlayerTwo(player);\n  };\n\n  handleReset = id => {\n    id === 'playerOne' ? setPlayerOne(null) : setPlayerTwo(null);\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(Instructions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"players-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"center-text header-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, \" Players \"), React.createElement(\"div\", {\n    className: \"row space-around\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, playerOne === null ? //if we haven't already rendered player1, render it\n  React.createElement(PlayerInput, {\n    label: \"Player One\",\n    onSubmit: player => handleSubmit('playerOne', player),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }) : React.createElement(PlayerPreview //if we have rendered player1 show preview of player\n  , {\n    username: playerOne,\n    label: \"Player One\",\n    onReset: () => handleReset('playerOne'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), playerTwo === null ? //if we haven't already rendered player2, render it\n  React.createElement(PlayerInput, {\n    label: \"Player Two\",\n    onSubmit: player => handleSubmit('playerTwo', player),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }) : React.createElement(PlayerPreview //if we have rendered player2 show preview of player\n  , {\n    username: playerTwo,\n    label: \"Player Two\",\n    onReset: () => handleReset('playerTwo'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  })), playerOne && playerTwo && React.createElement(Link //go to new URL and pass info about both players to it\n  , {\n    className: \"btn dark-btn btn-space\",\n    to: {\n      pathname: '/battle/results',\n      search: \"?playerOne=\".concat(playerOne, \"&playerTwo=\").concat(playerTwo)\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179\n    },\n    __self: this\n  }, \"Battle\")));\n};\n\nexport default Battle;","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/github-battle/github-battle/src/components/Battle.js"],"names":["React","useState","FaUserFriends","FaFighterJet","FaTrophy","FaTimesCircle","PropTypes","ThemeConsumer","Link","Instructions","theme","PlayerInput","onSubmit","label","username","setUsername","handleSubmit","event","preventDefault","handleChange","target","value","propTypes","func","isRequired","string","PlayerPreview","onReset","Battle","playerOne","setPlayerOne","playerTwo","setPlayerTwo","battle","setBattle","id","player","handleReset","pathname","search"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  FaUserFriends,\n  FaFighterJet,\n  FaTrophy,\n  FaTimesCircle,\n} from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport { ThemeConsumer } from '../contexts/theme';\nimport { Link } from 'react-router-dom';\n\nconst Instructions = () => {\n  return (\n    <ThemeConsumer>\n      {(theme) => (\n        <div className='instructions-container'>\n          <h1 className='center-text header-lg'>Instructions</h1>\n          <ol className='container-sm grid center-text battle-instructions'>\n            <li>\n              <h3 className='header-sm'>Enter two Github users</h3>\n              <FaUserFriends\n                className={`bg-${theme}`}\n                color='rgb(255, 191, 116'\n                size={140}\n              />\n            </li>\n            <li>\n              <h3 className='header-sm'>Battle</h3>\n              <FaFighterJet\n                className={`bg-${theme}`}\n                color='#727272'\n                size={140}\n              />\n            </li>\n            <li>\n              <h3 className='header-sm'>See the winners</h3>\n              <FaTrophy\n                className={`bg-${theme}`}\n                color='rgb(255, 215, 0)'\n                size={140}\n              />\n            </li>\n          </ol>\n        </div>\n      )}\n    </ThemeConsumer>\n  );\n};\n\nconst PlayerInput = ({ onSubmit, label }) => {\n  const [username, setUsername] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    onSubmit(username);\n  };\n\n  const handleChange = (event) => {\n    setUsername(event.target.value);\n  };\n\n  return (\n    <ThemeConsumer>\n      {(theme) => (\n        <form className='column player' onSubmit={handleSubmit}>\n          <label htmlFor='username' className='player-label'>\n            {label}\n          </label>\n          <div className='row player-inputs'>\n            <input\n              type='text'\n              id='username'\n              className={`input-${theme}`}\n              autoComplete='off'\n              value={username} //control the value in the component's state\n              onChange={handleChange} //when user inputs, handleChange updates state which then updates value\n            />\n            <button\n              className={`btn ${theme === 'dark' ? 'light-btn' : 'dark-btn'}`}\n              type='submit'\n              disabled={!username}\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      )}\n    </ThemeConsumer>\n  );\n};\n\nPlayerInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nconst PlayerPreview = ({ username, onReset, label }) => {\n  return (\n    <ThemeConsumer>\n      {(theme) => (\n        <div className='column player'>\n          <h3 className='player-label'>{label}</h3>\n          <div className={`row bg-${theme}`}>\n            <div className='player-info'>\n              <img\n                className='avatar-sm'\n                src={`https://github.com/${username}.png?size=200`}\n                alt={`Avatar for ${username}`}\n              />\n              <a href={`https://github.com/${username}`} className='link'>\n                {username}\n              </a>\n            </div>\n            <button className='btn-clear flex-center' onClick={onReset}>\n              <FaTimesCircle color='rgb(194, 57, 42)' size={26} />\n            </button>\n          </div>\n        </div>\n      )}\n    </ThemeConsumer>\n  );\n};\n\nPlayerPreview.propTypes = {\n  username: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nconst Battle = () => {\n  const [playerOne, setPlayerOne] = useState(null);\n  const [playerTwo, setPlayerTwo] = useState(null);\n  const [battle, setBattle] = useState();\n\n  const handleSubmit = (id, player) => {\n    id === 'playerOne' ? setPlayerOne(player) : setPlayerTwo(player);\n  };\n\n  handleReset = (id) => {\n    id === 'playerOne' ? setPlayerOne(null) : setPlayerTwo(null);\n  };\n\n  return (\n    <React.Fragment>\n      <Instructions />\n\n      <div className='players-container'>\n        <h1 className='center-text header-lg'> Players </h1>\n        <div className='row space-around'>\n          {playerOne === null ? ( //if we haven't already rendered player1, render it\n            <PlayerInput\n              label='Player One'\n              onSubmit={(player) => handleSubmit('playerOne', player)}\n            />\n          ) : (\n            <PlayerPreview //if we have rendered player1 show preview of player\n              username={playerOne}\n              label='Player One'\n              onReset={() => handleReset('playerOne')}\n            />\n          )}\n\n          {playerTwo === null ? ( //if we haven't already rendered player2, render it\n            <PlayerInput\n              label='Player Two'\n              onSubmit={(player) => handleSubmit('playerTwo', player)}\n            />\n          ) : (\n            <PlayerPreview //if we have rendered player2 show preview of player\n              username={playerTwo}\n              label='Player Two'\n              onReset={() => handleReset('playerTwo')}\n            />\n          )}\n        </div>\n\n        {playerOne && playerTwo && (\n          <Link //go to new URL and pass info about both players to it\n            className='btn dark-btn btn-space'\n            to={{\n              pathname: '/battle/results',\n              search: `?playerOne=${playerOne}&playerTwo=${playerTwo}`,\n            }}\n          >\n            Battle\n          </Link>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Battle;\n"]},"metadata":{},"sourceType":"module"}