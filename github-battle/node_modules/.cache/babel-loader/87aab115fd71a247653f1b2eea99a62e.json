{"ast":null,"code":"import _slicedToArray from \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/github-battle/github-battle/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/github-battle/github-battle/src/components/Loading.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nconst styles = {\n  content: {\n    fontSize: '35px',\n    position: 'absolute',\n    left: '0',\n    right: '0',\n    marginTop: '20px',\n    textAlign: 'center'\n  }\n};\n\nconst Loading = ({\n  text = 'Loading',\n  speed = 300\n}) => {\n  const _useState = useState(text),\n        _useState2 = _slicedToArray(_useState, 2),\n        content = _useState2[0],\n        setContent = _useState2[1];\n\n  useEffect(() => {\n    //every 300ms either add a dot or reset to 'Loading'\n    const intervalId = setInterval(() => {\n      content === text + '...' ? setContent(text) : setContent(content => content + '.');\n    }, speed); // Clear the interval timer when the component is unmounted\n\n    return () => clearInterval(intervalId);\n  }, [text, speed]);\n  return React.createElement(\"p\", {\n    style: styles.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, content);\n};\n\nLoading.propTypes = {\n  text: PropTypes.string,\n  speed: PropTypes.number\n};\nexport default Loading;","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/github-battle/github-battle/src/components/Loading.js"],"names":["React","useState","useEffect","PropTypes","styles","content","fontSize","position","left","right","marginTop","textAlign","Loading","text","speed","setContent","intervalId","setInterval","clearInterval","propTypes","string","number"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,QAAQ,EAAE,MADH;AAEPC,IAAAA,QAAQ,EAAE,UAFH;AAGPC,IAAAA,IAAI,EAAE,GAHC;AAIPC,IAAAA,KAAK,EAAE,GAJA;AAKPC,IAAAA,SAAS,EAAE,MALJ;AAMPC,IAAAA,SAAS,EAAE;AANJ;AADI,CAAf;;AAWA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA,IAAI,GAAG,SAAT;AAAoBC,EAAAA,KAAK,GAAG;AAA5B,CAAD,KAAuC;AAAA,oBACvBb,QAAQ,CAACY,IAAD,CADe;AAAA;AAAA,QAC9CR,OAD8C;AAAA,QACrCU,UADqC;;AAGrDb,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,UAAMc,UAAU,GAAGC,WAAW,CAAC,MAAM;AACnCZ,MAAAA,OAAO,KAAKQ,IAAI,GAAG,KAAnB,GACIE,UAAU,CAACF,IAAD,CADd,GAEIE,UAAU,CAAEV,OAAD,IAAaA,OAAO,GAAG,GAAxB,CAFd;AAGD,KAJ6B,EAI3BS,KAJ2B,CAA9B,CAFc,CAQd;;AACA,WAAO,MAAMI,aAAa,CAACF,UAAD,CAA1B;AACD,GAVQ,EAUN,CAACH,IAAD,EAAOC,KAAP,CAVM,CAAT;AAYA,SAAO;AAAG,IAAA,KAAK,EAAEV,MAAM,CAACC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BA,OAA3B,CAAP;AACD,CAhBD;;AAkBAO,OAAO,CAACO,SAAR,GAAoB;AAClBN,EAAAA,IAAI,EAAEV,SAAS,CAACiB,MADE;AAElBN,EAAAA,KAAK,EAAEX,SAAS,CAACkB;AAFC,CAApB;AAKA,eAAeT,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nconst styles = {\n  content: {\n    fontSize: '35px',\n    position: 'absolute',\n    left: '0',\n    right: '0',\n    marginTop: '20px',\n    textAlign: 'center',\n  },\n};\n\nconst Loading = ({ text = 'Loading', speed = 300 }) => {\n  const [content, setContent] = useState(text);\n\n  useEffect(() => {\n    //every 300ms either add a dot or reset to 'Loading'\n    const intervalId = setInterval(() => {\n      content === text + '...'\n        ? setContent(text)\n        : setContent((content) => content + '.');\n    }, speed);\n\n    // Clear the interval timer when the component is unmounted\n    return () => clearInterval(intervalId);\n  }, [text, speed]);\n\n  return <p style={styles.content}>{content}</p>;\n};\n\nLoading.propTypes = {\n  text: PropTypes.string,\n  speed: PropTypes.number,\n};\n\nexport default Loading;\n"]},"metadata":{},"sourceType":"module"}