{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/PRACTICE REACT/mcginnis-app/src/components/Popular.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchPopularRepos } from '../utils/api';\n\nfunction LanguagesNav({\n  selected,\n  onUpdateLanguage\n}) {\n  const languages = [\"All\", \"Ruby\", \"Javascript\", \"Java\", \"CSS\", \"Python\"];\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"flex-center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, languages.map(language => React.createElement(\"li\", {\n    key: language,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    onClick: () => onUpdateLanguage(language),\n    style: language === selected ? {\n      color: 'maroon'\n    } : null,\n    className: \"btn-clear nav-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, language)))));\n}\n\nLanguagesNav.propTypes = {\n  selected: PropTypes.string.isRequired,\n  onUpdateLanguage: PropTypes.func.isRequired\n};\n\nclass Popular extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedLanguage: \"All\",\n      repos: null,\n      error: null\n    };\n    this.updateLanguage = this.updateLanguage.bind(this);\n    this.isLoading = this.isLoading.bind(this);\n  }\n\n  updateLanguage(selectedLanguage) {\n    this.setState({\n      selectedLanguage,\n      error: null,\n      repos: null\n    });\n    fetchPopularRepos(selectedLanguage).then(repos => this.setState({\n      repos,\n      error: null\n    })).catch(() => {\n      console.warn('Error fetching repos: ', error); //if error, warn the developer\n\n      this.setState({\n        //warn the user if error\n        error: 'There was an error fetching the repositories.'\n      });\n    });\n  }\n\n  isLoading() {\n    //returns if there are no repos and no errors -- aka it's loading\n    return this.state.repos === null && this.state.error === null;\n  }\n\n  render() {\n    const _this$state = this.state,\n          selectedLanguage = _this$state.selectedLanguage,\n          repos = _this$state.repos,\n          error = _this$state.error;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(LanguagesNav, {\n      selected: selectedLanguage,\n      onUpdateLanguage: this.updateLanguage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }), this.isLoading() && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"LOADING\"));\n  }\n\n}\n\nexport default Popular;","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/PRACTICE REACT/mcginnis-app/src/components/Popular.js"],"names":["React","Component","PropTypes","fetchPopularRepos","LanguagesNav","selected","onUpdateLanguage","languages","map","language","color","propTypes","string","isRequired","func","Popular","constructor","props","state","selectedLanguage","repos","error","updateLanguage","bind","isLoading","setState","then","catch","console","warn","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchPopularRepos } from '../utils/api';\n\nfunction LanguagesNav({selected, onUpdateLanguage}) {\n    const languages = [\"All\", \"Ruby\", \"Javascript\", \"Java\", \"CSS\", \"Python\"]\n\n    return (\n        <div>\n            <ul className=\"flex-center\">\n                {languages.map(language =>\n                <li key={language}>\n                    <button \n                        onClick={() => onUpdateLanguage(language)} \n                        style={language === selected ? { color: 'maroon' } : null}\n                        className=\"btn-clear nav-link\">\n                        {language}\n                    </button>\n                </li>\n                )}\n            </ul>\n        </div>\n    )\n}\n\nLanguagesNav.propTypes = {\n    selected: PropTypes.string.isRequired,\n    onUpdateLanguage: PropTypes.func.isRequired\n}\n\nclass Popular extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state={\n            selectedLanguage: \"All\",\n            repos: null,\n            error: null\n        }\n    this.updateLanguage = this.updateLanguage.bind(this)\n    this.isLoading = this.isLoading.bind(this)\n    }\n\n    updateLanguage(selectedLanguage){\n        this.setState({\n            selectedLanguage,\n            error: null,\n            repos: null\n        })\n\n        fetchPopularRepos(selectedLanguage)\n            .then((repos) => this.setState({\n                repos,\n                error: null\n            }))\n            .catch(() => {\n                console.warn('Error fetching repos: ', error) //if error, warn the developer\n\n                this.setState({ //warn the user if error\n                    error: 'There was an error fetching the repositories.'\n                })\n            }) \n    }\n\n    isLoading() { //returns if there are no repos and no errors -- aka it's loading\n        return this.state.repos === null && this.state.error === null\n    }\n\n    render() {\n        const { selectedLanguage, repos, error } = this.state\n\n        return(\n            <React.Fragment>\n                <LanguagesNav \n                    selected={selectedLanguage}\n                    onUpdateLanguage={this.updateLanguage}\n                />\n                {this.isLoading() && <p>LOADING</p>}\n            </React.Fragment>\n        )\n    }\n}\n\n\n\nexport default Popular;\n"]},"metadata":{},"sourceType":"module"}