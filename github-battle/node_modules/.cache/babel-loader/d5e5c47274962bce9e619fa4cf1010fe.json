{"ast":null,"code":"var _jsxFileName = \"/Users/Sarah Schwartz/Desktop/PRACTICE REACT/mcginnis-app/src/components/Tooltip.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport withHover from './withHover';\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex'\n  },\n  tooltip: {\n    boxSizing: 'border-box',\n    position: 'absolute',\n    width: '160px',\n    bottom: '100%',\n    left: '50%',\n    marginLeft: '-80px',\n    borderRadius: '3px',\n    backgroundColor: 'hsla(0, 0%, 20%, 0.9)',\n    padding: '7px',\n    marginBottom: '5px',\n    color: '#fff',\n    textAlign: 'center',\n    fontSize: '14px'\n  } // class Tooltip extends Component {\n  //   constructor(props) {\n  //     super(props)\n  //     this.state = {\n  //       hovering: false,\n  //     }\n  //     this.mouseOver = this.mouseOver.bind(this)\n  //     this.mouseOut = this.mouseOut.bind(this)\n  //   }\n  //   mouseOver() {\n  //     this.setState({\n  //       hovering: true\n  //     })\n  //   }\n  //   mouseOut() {\n  //     this.setState({\n  //       hovering: false\n  //     })\n  //   }\n  //   render() {\n  //     const { text, children } = this.props\n  //     const { hovering } = this.state\n  //   }\n  // }\n\n};\n\nfunction Tooltip({\n  text,\n  children,\n  hovering\n}) {\n  return React.createElement(\"div\", {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, hovering === true && React.createElement(\"div\", {\n    style: styles.tooltip,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, text), children);\n}\n\nTooltip.propTypes = {\n  text: PropTypes.string.isRequired\n};\nexport default withHover(Tooltip);","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/PRACTICE REACT/mcginnis-app/src/components/Tooltip.js"],"names":["React","Component","PropTypes","withHover","styles","container","position","display","tooltip","boxSizing","width","bottom","left","marginLeft","borderRadius","backgroundColor","padding","marginBottom","color","textAlign","fontSize","Tooltip","text","children","hovering","propTypes","string","isRequired"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,SAAS,EAAE;AACTC,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,OAAO,EAAE;AAFA,GADE;AAKbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,SAAS,EAAE,YADJ;AAEPH,IAAAA,QAAQ,EAAE,UAFH;AAGPI,IAAAA,KAAK,EAAE,OAHA;AAIPC,IAAAA,MAAM,EAAE,MAJD;AAKPC,IAAAA,IAAI,EAAE,KALC;AAMPC,IAAAA,UAAU,EAAE,OANL;AAOPC,IAAAA,YAAY,EAAE,KAPP;AAQPC,IAAAA,eAAe,EAAE,uBARV;AASPC,IAAAA,OAAO,EAAE,KATF;AAUPC,IAAAA,YAAY,EAAE,KAVP;AAWPC,IAAAA,KAAK,EAAE,MAXA;AAYPC,IAAAA,SAAS,EAAE,QAZJ;AAaPC,IAAAA,QAAQ,EAAE;AAbH,GALI,CAsBf;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;;AAjDe,CAAf;;AAmDA,SAASC,OAAT,CAAmB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAnB,EAAiD;AAC7C,SACI;AAAK,IAAA,KAAK,EAAEpB,MAAM,CAACC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKmB,QAAQ,KAAK,IAAb,IAAqB;AAAK,IAAA,KAAK,EAAEpB,MAAM,CAACI,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6Bc,IAA7B,CAD1B,EAEKC,QAFL,CADJ;AAMH;;AAEDF,OAAO,CAACI,SAAR,GAAoB;AAClBH,EAAAA,IAAI,EAAEpB,SAAS,CAACwB,MAAV,CAAiBC;AADL,CAApB;AAIA,eAAexB,SAAS,CAACkB,OAAD,CAAxB","sourcesContent":["import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport withHover from './withHover';\n\nconst styles = {\n  container: {\n    position: 'relative',\n    display: 'flex'\n  },\n  tooltip: {\n    boxSizing: 'border-box',\n    position: 'absolute',\n    width: '160px',\n    bottom: '100%',\n    left: '50%',\n    marginLeft: '-80px',\n    borderRadius: '3px',\n    backgroundColor: 'hsla(0, 0%, 20%, 0.9)',\n    padding: '7px',\n    marginBottom: '5px',\n    color: '#fff',\n    textAlign: 'center',\n    fontSize: '14px',\n  }\n}\n\n// class Tooltip extends Component {\n//   constructor(props) {\n//     super(props)\n\n//     this.state = {\n//       hovering: false,\n//     }\n\n//     this.mouseOver = this.mouseOver.bind(this)\n//     this.mouseOut = this.mouseOut.bind(this)\n//   }\n//   mouseOver() {\n//     this.setState({\n//       hovering: true\n//     })\n//   }\n//   mouseOut() {\n//     this.setState({\n//       hovering: false\n//     })\n//   }\n//   render() {\n//     const { text, children } = this.props\n//     const { hovering } = this.state\n\n\n//   }\n// }\n\nfunction Tooltip ( { text, children, hovering }) {\n    return (\n        <div style={styles.container}>\n            {hovering === true && <div style={styles.tooltip}>{text}</div>}\n            {children}\n        </div>\n    )\n}\n\nTooltip.propTypes = {\n  text: PropTypes.string.isRequired\n} \n\nexport default withHover(Tooltip)"]},"metadata":{},"sourceType":"module"}