{"ast":null,"code":"import _slicedToArray from \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/github-battle/github-battle/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/github-battle/github-battle/src/components/Battle.js\";\nimport React, { useState } from 'react';\nimport { FaUserFriends, FaFighterJet, FaTrophy, FaTimesCircle } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport { ThemeConsumer } from '../contexts/theme';\nimport { Link } from 'react-router-dom';\n\nconst Instructions = () => {\n  return React.createElement(ThemeConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, theme => React.createElement(\"div\", {\n    className: \"instructions-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"center-text header-lg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"Instructions\"), React.createElement(\"ol\", {\n    className: \"container-sm grid center-text battle-instructions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Enter two Github users\"), React.createElement(FaUserFriends, {\n    className: \"bg-\".concat(theme),\n    color: \"rgb(255, 191, 116\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Battle\"), React.createElement(FaFighterJet, {\n    className: \"bg-\".concat(theme),\n    color: \"#727272\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"header-sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"See the winners\"), React.createElement(FaTrophy, {\n    className: \"bg-\".concat(theme),\n    color: \"rgb(255, 215, 0)\",\n    size: 140,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  })))));\n};\n\nconst PlayerInput = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        username = _useState2[0],\n        setUsername = _useState2[1];\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    this.props.onSubmit(username);\n  };\n\n  const handleChange = event => {\n    this.setState({\n      username: event.target.value\n    });\n  };\n\n  return React.createElement(ThemeConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, theme => React.createElement(\"form\", {\n    className: \"column player\",\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"username\",\n    className: \"player-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, this.props.label), React.createElement(\"div\", {\n    className: \"row player-inputs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    className: \"input-\".concat(theme),\n    autoComplete: \"off\",\n    value: this.state.username //control the value in the component's state\n    ,\n    onChange: this.handleChange //when user inputs, handleChange updates state which then updates value\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"btn \".concat(theme === 'dark' ? 'light-btn' : 'dark-btn'),\n    type: \"submit\",\n    disabled: !this.state.username,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"Submit\"))));\n};\n\nPlayerInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nfunction PlayerPreview({\n  username,\n  onReset,\n  label\n}) {\n  return React.createElement(ThemeConsumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, theme => React.createElement(\"div\", {\n    className: \"column player\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"player-label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, label), React.createElement(\"div\", {\n    className: \"row bg-\".concat(theme),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"player-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    className: \"avatar-sm\",\n    src: \"https://github.com/\".concat(username, \".png?size=200\"),\n    alt: \"Avatar for \".concat(username),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"a\", {\n    href: \"https://github.com/\".concat(username),\n    className: \"link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, username)), React.createElement(\"button\", {\n    className: \"btn-clear flex-center\",\n    onClick: onReset,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(FaTimesCircle, {\n    color: \"rgb(194, 57, 42)\",\n    size: 26,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  })))));\n}\n\nPlayerPreview.propTypes = {\n  username: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n};\n\nclass Battle extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      playerOne: null,\n      playerTwo: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  handleSubmit(id, player) {\n    this.setState({\n      [id]: player\n    });\n  }\n\n  handleReset(id) {\n    this.setState({\n      [id]: null\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          playerOne = _this$state.playerOne,\n          playerTwo = _this$state.playerTwo,\n          battle = _this$state.battle;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(Instructions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"players-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"center-text header-lg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \" Players \"), React.createElement(\"div\", {\n      className: \"row space-around\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, playerOne === null ? //if we haven't already rendered player1, render it\n    React.createElement(PlayerInput, {\n      label: \"Player One\",\n      onSubmit: player => this.handleSubmit('playerOne', player),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }) : React.createElement(PlayerPreview //if we have rendered player1 show preview of player\n    , {\n      username: playerOne,\n      label: \"Player One\",\n      onReset: () => this.handleReset('playerOne'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), playerTwo === null ? //if we haven't already rendered player2, render it\n    React.createElement(PlayerInput, {\n      label: \"Player Two\",\n      onSubmit: player => this.handleSubmit('playerTwo', player),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }) : React.createElement(PlayerPreview //if we have rendered player2 show preview of player\n    , {\n      username: playerTwo,\n      label: \"Player Two\",\n      onReset: () => this.handleReset('playerTwo'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    })), playerOne && playerTwo && React.createElement(Link //go to new URL and pass info about both players to it\n    , {\n      className: \"btn dark-btn btn-space\",\n      to: {\n        pathname: '/battle/results',\n        search: \"?playerOne=\".concat(playerOne, \"&playerTwo=\").concat(playerTwo)\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Battle\")));\n  }\n\n}\n\nexport default Battle;","map":{"version":3,"sources":["/Users/Sarah Schwartz/Desktop/CODING/Apps REACT/github-battle/github-battle/src/components/Battle.js"],"names":["React","useState","FaUserFriends","FaFighterJet","FaTrophy","FaTimesCircle","PropTypes","ThemeConsumer","Link","Instructions","theme","PlayerInput","username","setUsername","handleSubmit","event","preventDefault","props","onSubmit","handleChange","setState","target","value","label","state","propTypes","func","isRequired","string","PlayerPreview","onReset","Battle","Component","constructor","playerOne","playerTwo","bind","handleReset","id","player","render","battle","pathname","search"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,QAHF,EAIEC,aAJF,QAKO,gBALP;AAMA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIC,KAAD,IACC;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAI,IAAA,SAAS,EAAC,mDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE,oBAAC,aAAD;AACE,IAAA,SAAS,eAAQA,KAAR,CADX;AAEE,IAAA,KAAK,EAAC,mBAFR;AAGE,IAAA,IAAI,EAAE,GAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE,oBAAC,YAAD;AACE,IAAA,SAAS,eAAQA,KAAR,CADX;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,IAAI,EAAE,GAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CATF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,QAAD;AACE,IAAA,SAAS,eAAQA,KAAR,CADX;AAEE,IAAA,KAAK,EAAC,kBAFR;AAGE,IAAA,IAAI,EAAE,GAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAjBF,CAFF,CAFJ,CADF;AAmCD,CApCD;;AAsCA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBACQV,QAAQ,CAAC,EAAD,CADhB;AAAA;AAAA,QACjBW,QADiB;AAAA,QACPC,WADO;;AAGxB,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;AAEA,SAAKC,KAAL,CAAWC,QAAX,CAAoBN,QAApB;AACD,GAJD;;AAMA,QAAMO,YAAY,GAAIJ,KAAD,IAAW;AAC9B,SAAKK,QAAL,CAAc;AACZR,MAAAA,QAAQ,EAAEG,KAAK,CAACM,MAAN,CAAaC;AADX,KAAd;AAGD,GAJD;;AAMA,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIZ,KAAD,IACC;AAAM,IAAA,SAAS,EAAC,eAAhB;AAAgC,IAAA,QAAQ,EAAE,KAAKI,YAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAC,cAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,KAAKG,KAAL,CAAWM,KADd,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,EAAE,EAAC,UAFL;AAGE,IAAA,SAAS,kBAAWb,KAAX,CAHX;AAIE,IAAA,YAAY,EAAC,KAJf;AAKE,IAAA,KAAK,EAAE,KAAKc,KAAL,CAAWZ,QALpB,CAK8B;AAL9B;AAME,IAAA,QAAQ,EAAE,KAAKO,YANjB,CAM+B;AAN/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE;AACE,IAAA,SAAS,gBAAST,KAAK,KAAK,MAAV,GAAmB,WAAnB,GAAiC,UAA1C,CADX;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAE,CAAC,KAAKc,KAAL,CAAWZ,QAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CAJF,CAFJ,CADF;AA4BD,CA3CD;;AA6CAD,WAAW,CAACc,SAAZ,GAAwB;AACtBP,EAAAA,QAAQ,EAAEZ,SAAS,CAACoB,IAAV,CAAeC,UADH;AAEtBJ,EAAAA,KAAK,EAAEjB,SAAS,CAACsB,MAAV,CAAiBD;AAFF,CAAxB;;AAKA,SAASE,aAAT,CAAuB;AAAEjB,EAAAA,QAAF;AAAYkB,EAAAA,OAAZ;AAAqBP,EAAAA;AAArB,CAAvB,EAAqD;AACnD,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIb,KAAD,IACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8Ba,KAA9B,CADF,EAEE;AAAK,IAAA,SAAS,mBAAYb,KAAZ,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,GAAG,+BAAwBE,QAAxB,kBAFL;AAGE,IAAA,GAAG,uBAAgBA,QAAhB,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME;AAAG,IAAA,IAAI,+BAAwBA,QAAxB,CAAP;AAA2C,IAAA,SAAS,EAAC,MAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,QADH,CANF,CADF,EAWE;AAAQ,IAAA,SAAS,EAAC,uBAAlB;AAA0C,IAAA,OAAO,EAAEkB,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,kBAArB;AAAwC,IAAA,IAAI,EAAE,EAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXF,CAFF,CAFJ,CADF;AAwBD;;AAEDD,aAAa,CAACJ,SAAd,GAA0B;AACxBb,EAAAA,QAAQ,EAAEN,SAAS,CAACsB,MAAV,CAAiBD,UADH;AAExBG,EAAAA,OAAO,EAAExB,SAAS,CAACoB,IAAV,CAAeC,UAFA;AAGxBJ,EAAAA,KAAK,EAAEjB,SAAS,CAACsB,MAAV,CAAiBD;AAHA,CAA1B;;AAMA,MAAMI,MAAN,SAAqBC,SAArB,CAA+B;AAC7BC,EAAAA,WAAW,CAAChB,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKO,KAAL,GAAa;AACXU,MAAAA,SAAS,EAAE,IADA;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAIA,SAAKrB,YAAL,GAAoB,KAAKA,YAAL,CAAkBsB,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDtB,EAAAA,YAAY,CAACwB,EAAD,EAAKC,MAAL,EAAa;AACvB,SAAKnB,QAAL,CAAc;AACZ,OAACkB,EAAD,GAAMC;AADM,KAAd;AAGD;;AAEDF,EAAAA,WAAW,CAACC,EAAD,EAAK;AACd,SAAKlB,QAAL,CAAc;AACZ,OAACkB,EAAD,GAAM;AADM,KAAd;AAGD;;AAEDE,EAAAA,MAAM,GAAG;AAAA,wBACkC,KAAKhB,KADvC;AAAA,UACCU,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBM,MADvB,eACuBA,MADvB;AAGP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGP,SAAS,KAAK,IAAd,GAAuB;AACtB,wBAAC,WAAD;AACE,MAAA,KAAK,EAAC,YADR;AAEE,MAAA,QAAQ,EAAGK,MAAD,IAAY,KAAKzB,YAAL,CAAkB,WAAlB,EAA+ByB,MAA/B,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAMC,oBAAC,aAAD,CAAe;AAAf;AACE,MAAA,QAAQ,EAAEL,SADZ;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKG,WAAL,CAAiB,WAAjB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAcGF,SAAS,KAAK,IAAd,GAAuB;AACtB,wBAAC,WAAD;AACE,MAAA,KAAK,EAAC,YADR;AAEE,MAAA,QAAQ,EAAGI,MAAD,IAAY,KAAKzB,YAAL,CAAkB,WAAlB,EAA+ByB,MAA/B,CAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAMC,oBAAC,aAAD,CAAe;AAAf;AACE,MAAA,QAAQ,EAAEJ,SADZ;AAEE,MAAA,KAAK,EAAC,YAFR;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKE,WAAL,CAAiB,WAAjB,CAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,CAFF,EA8BGH,SAAS,IAAIC,SAAb,IACC,oBAAC,IAAD,CAAM;AAAN;AACE,MAAA,SAAS,EAAC,wBADZ;AAEE,MAAA,EAAE,EAAE;AACFO,QAAAA,QAAQ,EAAE,iBADR;AAEFC,QAAAA,MAAM,uBAAgBT,SAAhB,wBAAuCC,SAAvC;AAFJ,OAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/BJ,CAHF,CADF;AAgDD;;AA3E4B;;AA8E/B,eAAeJ,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n  FaUserFriends,\n  FaFighterJet,\n  FaTrophy,\n  FaTimesCircle,\n} from 'react-icons/fa';\nimport PropTypes from 'prop-types';\nimport { ThemeConsumer } from '../contexts/theme';\nimport { Link } from 'react-router-dom';\n\nconst Instructions = () => {\n  return (\n    <ThemeConsumer>\n      {(theme) => (\n        <div className='instructions-container'>\n          <h1 className='center-text header-lg'>Instructions</h1>\n          <ol className='container-sm grid center-text battle-instructions'>\n            <li>\n              <h3 className='header-sm'>Enter two Github users</h3>\n              <FaUserFriends\n                className={`bg-${theme}`}\n                color='rgb(255, 191, 116'\n                size={140}\n              />\n            </li>\n            <li>\n              <h3 className='header-sm'>Battle</h3>\n              <FaFighterJet\n                className={`bg-${theme}`}\n                color='#727272'\n                size={140}\n              />\n            </li>\n            <li>\n              <h3 className='header-sm'>See the winners</h3>\n              <FaTrophy\n                className={`bg-${theme}`}\n                color='rgb(255, 215, 0)'\n                size={140}\n              />\n            </li>\n          </ol>\n        </div>\n      )}\n    </ThemeConsumer>\n  );\n};\n\nconst PlayerInput = () => {\n  const [username, setUsername] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    this.props.onSubmit(username);\n  };\n\n  const handleChange = (event) => {\n    this.setState({\n      username: event.target.value,\n    });\n  };\n\n  return (\n    <ThemeConsumer>\n      {(theme) => (\n        <form className='column player' onSubmit={this.handleSubmit}>\n          <label htmlFor='username' className='player-label'>\n            {this.props.label}\n          </label>\n          <div className='row player-inputs'>\n            <input\n              type='text'\n              id='username'\n              className={`input-${theme}`}\n              autoComplete='off'\n              value={this.state.username} //control the value in the component's state\n              onChange={this.handleChange} //when user inputs, handleChange updates state which then updates value\n            />\n            <button\n              className={`btn ${theme === 'dark' ? 'light-btn' : 'dark-btn'}`}\n              type='submit'\n              disabled={!this.state.username}\n            >\n              Submit\n            </button>\n          </div>\n        </form>\n      )}\n    </ThemeConsumer>\n  );\n};\n\nPlayerInput.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nfunction PlayerPreview({ username, onReset, label }) {\n  return (\n    <ThemeConsumer>\n      {(theme) => (\n        <div className='column player'>\n          <h3 className='player-label'>{label}</h3>\n          <div className={`row bg-${theme}`}>\n            <div className='player-info'>\n              <img\n                className='avatar-sm'\n                src={`https://github.com/${username}.png?size=200`}\n                alt={`Avatar for ${username}`}\n              />\n              <a href={`https://github.com/${username}`} className='link'>\n                {username}\n              </a>\n            </div>\n            <button className='btn-clear flex-center' onClick={onReset}>\n              <FaTimesCircle color='rgb(194, 57, 42)' size={26} />\n            </button>\n          </div>\n        </div>\n      )}\n    </ThemeConsumer>\n  );\n}\n\nPlayerPreview.propTypes = {\n  username: PropTypes.string.isRequired,\n  onReset: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired,\n};\n\nclass Battle extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      playerOne: null,\n      playerTwo: null,\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n  }\n\n  handleSubmit(id, player) {\n    this.setState({\n      [id]: player,\n    });\n  }\n\n  handleReset(id) {\n    this.setState({\n      [id]: null,\n    });\n  }\n\n  render() {\n    const { playerOne, playerTwo, battle } = this.state;\n\n    return (\n      <React.Fragment>\n        <Instructions />\n\n        <div className='players-container'>\n          <h1 className='center-text header-lg'> Players </h1>\n          <div className='row space-around'>\n            {playerOne === null ? ( //if we haven't already rendered player1, render it\n              <PlayerInput\n                label='Player One'\n                onSubmit={(player) => this.handleSubmit('playerOne', player)}\n              />\n            ) : (\n              <PlayerPreview //if we have rendered player1 show preview of player\n                username={playerOne}\n                label='Player One'\n                onReset={() => this.handleReset('playerOne')}\n              />\n            )}\n\n            {playerTwo === null ? ( //if we haven't already rendered player2, render it\n              <PlayerInput\n                label='Player Two'\n                onSubmit={(player) => this.handleSubmit('playerTwo', player)}\n              />\n            ) : (\n              <PlayerPreview //if we have rendered player2 show preview of player\n                username={playerTwo}\n                label='Player Two'\n                onReset={() => this.handleReset('playerTwo')}\n              />\n            )}\n          </div>\n\n          {playerOne && playerTwo && (\n            <Link //go to new URL and pass info about both players to it\n              className='btn dark-btn btn-space'\n              to={{\n                pathname: '/battle/results',\n                search: `?playerOne=${playerOne}&playerTwo=${playerTwo}`,\n              }}\n            >\n              Battle\n            </Link>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Battle;\n"]},"metadata":{},"sourceType":"module"}